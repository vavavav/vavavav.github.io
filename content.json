[{"title":"线性回归","date":"2020-05-12T09:13:07.000Z","path":"2020/05/12/线性回归/","excerpt":"线性回归模型建立线性回归原理进入一家房产网，可以看到房价、面积、厅室呈现以下数据： 将价格、面积、厅数的关系习得： $f(x) = \\theta + \\theta_1 x_1 +\\theta_2x_2$ 使得$f(x) \\approx y$,这就是一个直观的线性回归的样式。","categories":[],"tags":[{"name":"liner regression","slug":"liner-regression","permalink":"https://vavavav.github.io/tags/liner-regression/"}]},{"title":"哈希表","date":"2020-05-07T14:18:25.000Z","path":"2020/05/07/哈希表/","excerpt":"","categories":[],"tags":[]},{"title":"排序（五）","date":"2020-04-28T15:32:35.000Z","path":"2020/04/28/排序（五）/","excerpt":"归并算法","categories":[{"name":"algorithm","slug":"algorithm","permalink":"https://vavavav.github.io/categories/algorithm/"}],"tags":[{"name":"归并算法","slug":"归并算法","permalink":"https://vavavav.github.io/tags/%E5%BD%92%E5%B9%B6%E7%AE%97%E6%B3%95/"}]},{"title":"排序算法（四）","date":"2020-04-25T11:28:57.000Z","path":"2020/04/25/排序算法（四）/","excerpt":"快速排序同冒泡排序一样，快速排序也属于交换排序，通过元素之间的比较和交换位置来达到排序的目的。 不同的是，冒泡排序在每一轮只把一个元素冒泡到数列的一端，而快速排序在每一轮挑选一个基准元素，并让其他比它大的元素移动到数列一边，比它小的元素移动到数列的另一边，从而把数列拆解成了两个部分。(分治的思想)","categories":[{"name":"algorithm","slug":"algorithm","permalink":"https://vavavav.github.io/categories/algorithm/"}],"tags":[{"name":"quicksort","slug":"quicksort","permalink":"https://vavavav.github.io/tags/quicksort/"}]},{"title":"排序算法（三）","date":"2020-04-22T04:00:57.000Z","path":"2020/04/22/排序算法（三）/","excerpt":"希尔排序希尔排序(Shell’s Sort)是插入排序的一种又称“缩小增量排序”（Diminishing Increment Sort），是直接插入排序算法的一种更高效的改进版本。希尔排序是非稳定排序算法。该方法因D.L.Shell于1959年提出而得名。 希尔排序是把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减少，每组包含的关键词越来越多，当增量减至1时，整个文件恰被分成一组，算法便终止。","categories":[{"name":"algorithm","slug":"algorithm","permalink":"https://vavavav.github.io/categories/algorithm/"}],"tags":[{"name":"shellsort","slug":"shellsort","permalink":"https://vavavav.github.io/tags/shellsort/"}]},{"title":"排序算法（二）","date":"2020-04-22T03:14:18.000Z","path":"2020/04/22/排序算法（二）/","excerpt":"插入排序排序思想插入排序的基本思想是：把n个待排序的元素看成一个有序表和一个无序表，开始是有序表中只包含一个元素，无序表中包含n-1个元素，排序过程中每次从无序表中取出一个元素，把他的排序码依次与有序表中元素进行比较，将它插入到有序表中合适的位置 ，使之成为新的有序表。","categories":[{"name":"algorithm","slug":"algorithm","permalink":"https://vavavav.github.io/categories/algorithm/"}],"tags":[{"name":"insertsort","slug":"insertsort","permalink":"https://vavavav.github.io/tags/insertsort/"}]},{"title":"排序算法","date":"2020-04-21T03:35:30.000Z","path":"2020/04/21/排序算法/","excerpt":"排序分类内部排序（使用内存） 插入排序 直接插入排序 希尔排序 选择排序 简单选择排序 堆排序 交换排序 冒泡排序 快速排序 归并排序 基数排序 外部排序（使用内存和外存）","categories":[{"name":"algorithm","slug":"algorithm","permalink":"https://vavavav.github.io/categories/algorithm/"}],"tags":[{"name":"selectsort","slug":"selectsort","permalink":"https://vavavav.github.io/tags/selectsort/"},{"name":"sort","slug":"sort","permalink":"https://vavavav.github.io/tags/sort/"},{"name":"bubblesort","slug":"bubblesort","permalink":"https://vavavav.github.io/tags/bubblesort/"}]},{"title":"递归","date":"2020-04-16T13:55:07.000Z","path":"2020/04/16/递归/","excerpt":"八皇后问题","categories":[{"name":"algorithm","slug":"algorithm","permalink":"https://vavavav.github.io/categories/algorithm/"}],"tags":[{"name":"recursion","slug":"recursion","permalink":"https://vavavav.github.io/tags/recursion/"},{"name":"八皇后","slug":"八皇后","permalink":"https://vavavav.github.io/tags/%E5%85%AB%E7%9A%87%E5%90%8E/"}]},{"title":"感知机原理","date":"2020-04-10T02:30:50.000Z","path":"2020/04/10/感知机原理/","excerpt":"1.前言感知机是神经网络和支持向量机的基础 2.感知机原理感知机是二分类的线性模型，其输入是实例的特征向量，输出的是事例的类别，分别是+1和-1，属于判别模型。 假设训练数据集是线性可分的，感知机学习的目标是求得一个能够将训练数据集正实例点和负实例点完全正确分开的分离超平面。如果是非线性可分的数据，则最后无法获得超平面，如果非线性可分，则最后无法获得超平面。","categories":[{"name":"machine learning","slug":"machine-learning","permalink":"https://vavavav.github.io/categories/machine-learning/"}],"tags":[{"name":"感知机","slug":"感知机","permalink":"https://vavavav.github.io/tags/%E6%84%9F%E7%9F%A5%E6%9C%BA/"}]},{"title":"栈","date":"2020-04-01T13:29:27.000Z","path":"2020/04/01/栈/","excerpt":"栈定义","categories":[{"name":"数据结构","slug":"数据结构","permalink":"https://vavavav.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}],"tags":[{"name":"栈","slug":"栈","permalink":"https://vavavav.github.io/tags/%E6%A0%88/"}]},{"title":"环形单向列表","date":"2020-04-01T11:32:06.000Z","path":"2020/04/01/环形单向列表/","excerpt":"单向环形链表背景：约瑟夫问题编号为1234…的n个人坐在一起围城圈，约定编号为k（1&lt;k&lt;n）的人从1开始报数，数到m个人出列以此类推，直到所有的人出列为止，由此产生一个出队编号的序列。","categories":[{"name":"数据结构","slug":"数据结构","permalink":"https://vavavav.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}],"tags":[{"name":"环形链表","slug":"环形链表","permalink":"https://vavavav.github.io/tags/%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/"}]},{"title":"链表","date":"2020-03-26T13:50:43.000Z","path":"2020/03/26/单链表和双向链表/","excerpt":"单链表是有序列表，链表是以节点的方式来存储的，节点包括data域，next域：指向下一个节点，链表节点不一定是连续存储，分为带头结点的链表和不带头结点的。","categories":[{"name":"数据结构","slug":"数据结构","permalink":"https://vavavav.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}],"tags":[{"name":"单链表","slug":"单链表","permalink":"https://vavavav.github.io/tags/%E5%8D%95%E9%93%BE%E8%A1%A8/"},{"name":"双向链表","slug":"双向链表","permalink":"https://vavavav.github.io/tags/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/"},{"name":"单向环形链表","slug":"单向环形链表","permalink":"https://vavavav.github.io/tags/%E5%8D%95%E5%90%91%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/"}]},{"title":"数据结构概述","date":"2020-03-19T15:35:51.000Z","path":"2020/03/19/数据结构概述/","excerpt":"数据结构线性结构‘’数据元素之间存在一对一的线性关系，常见的有数组、队列、链表、栈 顺序存储结构又称顺序表，内存中地址连续 连式存储结构又称链表，地址不一定连续 非线性结构非一对一关系，常见的有二维数组、多维数组、广义表、树结构、图结构","categories":[{"name":"数据结构","slug":"数据结构","permalink":"https://vavavav.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}],"tags":[{"name":"数据结构","slug":"数据结构","permalink":"https://vavavav.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"稀疏数组","slug":"稀疏数组","permalink":"https://vavavav.github.io/tags/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/"},{"name":"队列","slug":"队列","permalink":"https://vavavav.github.io/tags/%E9%98%9F%E5%88%97/"},{"name":"环形队列","slug":"环形队列","permalink":"https://vavavav.github.io/tags/%E7%8E%AF%E5%BD%A2%E9%98%9F%E5%88%97/"}]},{"title":"hexo 配置和使用","date":"2020-03-19T11:08:05.000Z","path":"2020/03/19/hexo-配置和使用/","excerpt":"Hexo 配置和使用基本配置在Hexo中，有两个配置文件，一个是用来配置整站信息的，位于项目更目录下的_config.yml文件。另外一个是对主题的配置，位于themes目录下你所采用的主题目录里，文件名同样是_config.yml","categories":[{"name":"hexo","slug":"hexo","permalink":"https://vavavav.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://vavavav.github.io/tags/hexo/"}]}]